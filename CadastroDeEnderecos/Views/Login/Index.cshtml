@model LoginModel
@{
    Layout = "_LayoutDeslogado";
    ViewData["Title"] = "Login";
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemErro"]
    </div>
}

<div class="d-flex justify-content-center">
    <form asp-controller="Login" asp-action="Entrar" method="post" class="text-center">
        <div class="mb-3">
            <label for="login" class="form-label fs-5">Login</label>
            <input type="text" class="form-control form-control-sm" id="login" asp-for="Login">
            @Html.ValidationMessageFor(x => x.Login)
        </div>
        <div class="mb-3">
            <label for="senha" class="form-label fs-5">Senha</label>
            <input type="password" class="form-control form-control-sm" id="senha" asp-for="Senha">
            @Html.ValidationMessageFor(x => x.Senha)
        </div>

        <button type="submit" class="btn btn-primary">Entrar</button>
        <a class="btn btn-secondary" asp-controller="Usuario" asp-action="Create" role="button">Criar usuário</a>
    </form>
</div>





