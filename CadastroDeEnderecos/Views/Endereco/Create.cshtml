@using CadastroDeEnderecos.Models.ViewModel
@model EnderecoModel
@{

    ViewData["Title"] = "Cadastrar endereços";
    var cep = Context.Request.Query["cep"];

    EnderecoModel endereco = new EnderecoModel();
    string mapa = "";
    string cliqueAqui = "";

    if (validaCep(cep))
    {
        endereco = ConsultaCep(cep);
        cliqueAqui = "Clique aqui para visualizar o endereço no mapa";
        mapa = $"https://www.google.com/maps/place/{endereco.Logradouro}+{endereco.Cep}";
    }
}

<div class="text-center">
    <h1 class="display-4">Cadastrar endereço</h1>
    <br />
</div>

<form>
    <div class="form-group">
        <label for="cep" control-label>CEP:</label>
        <input type="search" name="cep" maxlength="9" />
        <button class="btn btn-primary">Pesquisar</button>
    </div>
</form>

<form asp-controller="Endereco" asp-action="Create" method="post">
 
    <div class="mb-3">
        <label for="cep">CEP</label>
        <input type="text" class="form-control" placeholder="Digite o cep" asp-for="Cep" value="@endereco.Cep">
        @Html.ValidationMessageFor(x => x.Cep)
    </div>
    <div class="mb-3">
        <label for="logradouro">Logradouro</label>
        <input type="text" class="form-control" placeholder="Digite o logradouro" asp-for="Logradouro" value="@endereco.Logradouro">
        @Html.ValidationMessageFor(x => x.Logradouro)
    </div>
    <div class="mb-3">
        <label for="complemento">Complemento</label>
        <input type="text" class="form-control" placeholder="Digite o complemento" asp-for="Complemento" value="@endereco.Complemento">

    </div>
    <div class="mb-3">
        <label for="bairro">Bairro</label>
        <input type="text" class="form-control" placeholder="Digite o bairro" asp-for="Bairro" value="@endereco.Bairro">
        @Html.ValidationMessageFor(x => x.Bairro)
    </div>

    <div class="mb-3">
        <label for="cidade">Cidade</label>
        <input type="text" class="form-control" placeholder="Digite a cidade" asp-for="Cidade" value="@endereco.Cidade">
        @Html.ValidationMessageFor(x => x.Cidade)
    </div>

    <div class="mb-3">
        <label for="uf">UF</label>
        <input type="text" class="form-control" placeholder="Digite a UF" asp-for="Uf" value="@endereco.Uf">
        @Html.ValidationMessageFor(x => x.Uf)
    </div>

    <div class="mb-3">
        <label for="numero">Numero</label>
        <input type="text" class="form-control" placeholder="Digite o número" asp-for="Numero">
        @Html.ValidationMessageFor(x => x.Numero)
    </div>

    <button type="submit" class="btn btn-primary">Cadastrar</button>
    <a role="button" class="btn btn-secondary" asp-controller="Endereco" asp-action="Index">Voltar</a>
</form>
@functions {

    public EnderecoModel ConsultaCep(string cep)
    {
        var enderecoTask = new EnderecoViewModel().GetEnderecoAsync(cep);

        enderecoTask.ContinueWith(task =>
        {
            EnderecoModel enderecoTask = task.Result;
        },
        TaskContinuationOptions.OnlyOnRanToCompletion);

        return enderecoTask.Result;
    }

    public bool validaCep(string cep)
    {
        if (cep == null)
            return false;
        if (cep != "" && cep.Replace("-", "").Length == 8)
            return true;
        else
            return false;
    }
}